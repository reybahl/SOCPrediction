# -*- coding: utf-8 -*-
"""Google Earth Engine

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1opQZkheVUFbldZX5N2DmqdRwG1x-DnB3
"""

import ee

# Trigger the authentication flow.
ee.Authenticate()

# Initialize the library.
ee.Initialize()

def select(long1, lat1, long2, lat2):
	rectangle = ee.Geometry.Rectangle([long1, lat1, long2, lat2])

	dataset = 'LANDSAT/LC08/C01/T1_TOA'

	l8 = ee.ImageCollection(dataset)

	img = ee.Image(
		l8.filterBounds(rectangle)
			.filterDate('2015-01-01',
				'2015-12-31')
			.sort('CLOUD_COVER').first()
	)
	return img.clip(rectangle).select(list(range(11))), rectangle

import pandas as pd
latdata = pd.read_csv('/content/drive/MyDrive/SOCData/latdata.csv').to_numpy()
latdata.shape

import json
from collections import defaultdict


def do_thousand_images():
    f = open("/content/drive/MyDrive/SOC/counts_per_mu_global.json")
    counts_per_mu_global = defaultdict(lambda : 0, json.load(f))

    uploaded_image_count = int(open("/content/drive/MyDrive/SOC/images_uploaded_count").read())

    tasks = []
    for i in range(uploaded_image_count, uploaded_image_count + 1000):
        mu_global = str(int(latdata[i][0]))
        long1 = latdata[i][1]
        long2 = latdata[i][2]
        lat1 = latdata[i][3]
        lat2 = latdata[i][4]
        
        img, region = select(long1, lat1, long2, lat2)
        counts_per_mu_global[mu_global] += 1

        task = ee.batch.Export.image.toDrive(image=img,
                                        description='test',
                                        scale=30,
                                        region=region,
                                        fileNamePrefix = str(counts_per_mu_global[mu_global]),
                                        crs='EPSG:4326',
                                        fileFormat='GeoTIFF', folder= mu_global)
        task.start()
        tasks.append(task)
        uploaded_image_count
        print(i)
        uploaded_image_count += 1

        with open('/content/drive/MyDrive/SOC/images_uploaded_count', 'w') as f:
            f.write(str(uploaded_image_count))

        with open('/content/drive/MyDrive/SOC/counts_per_mu_global.json', 'w') as f:
            json.dump(dict(counts_per_mu_global), f)

import time

while True:
    do_thousand_images()
    time.sleep(100)

img.getThumbURL({'scale': 200, 'format': 'png', 'bands': ["B4", "B3", "B2"], 'min': 0, 'max': 0.5, 'gamma': [0.95, 1.1, 1]})